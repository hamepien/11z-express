{"version":3,"file":"catch-async-errors.js","sourceRoot":"","sources":["../../../src/lib/catch-async-errors.ts"],"names":[],"mappings":";;;AAEA,MAAM,KAAK,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAA;AACjD,MAAM,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAA;AAE5C,MAAM,IAAI,GAAG,CAAC,MAAiB,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;AACzD,MAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAA;AAE/B;;;;;GAKG;AACH,SAAS,WAAW,CAAC,KAAgC,EAAE,KAA+D;IAClH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;QAC/B,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;IAEF,OAAO,KAAK,CAAA;AAChB,CAAC;AAED;;;;;GAKG;AACH,SAAS,IAAI,CAAC,EAAwC;IAClD,MAAM,KAAK,GAAG,SAAS,KAAK,CAAgB,GAAG,IAAe;QAC1D,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;QACnC,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAA;QAE/D,IAAI,MAAM,IAAI,MAAM,CAAC,KAAK;YAAE,MAAM,CAAC,KAAK,CAAC,CAAC,GAAU,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QAEnE,OAAO,MAAM,CAAA;IACjB,CAAC,CAAA;IAED,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE;QACnC,KAAK,EAAE,EAAE,CAAC,MAAM;QAChB,QAAQ,EAAE,KAAK;KAClB,CAAC,CAAA;IAEF,OAAO,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;AACjC,CAAC;AAED;;;;GAIG;AACH,SAAgB,gBAAgB;IAC5B,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAA;IACxD,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,GAAG,SAAS,KAAK,CAAC,IAAY,EAAE,EAAwC;QACtG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA;QACb,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;IAC7C,CAAC,CAAA;AACL,CAAC;AAND,4CAMC;AAED,kFAAkF;AAClF,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,QAAQ,EAAE;IAC7C,UAAU,EAAE,IAAI;IAEhB,GAAG;QACC,OAAO,IAAI,CAAC,QAAQ,CAAA;IACxB,CAAC;IAED,GAAG,CAAC,EAAE;QACF,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;IACtB,CAAC;CACJ,CAAC,CAAA","sourcesContent":["import { NonSafe } from '../utils/types'\r\n\r\nconst Layer = require('express/lib/router/layer')\r\nconst Router = require('express/lib/router')\r\n\r\nconst last = (arr: NonSafe[] = []) => arr[arr.length - 1]\r\nconst noop = Function.prototype\r\n\r\n/**\r\n * It takes an object with functions as properties and returns a function with the same properties\r\n * @param oldFn - The function you want to copy the properties from.\r\n * @param newFn - { (...args: NonSafe[]): Function; [x: string]: NonSafe }\r\n * @returns A function that takes a function and returns a function.\r\n */\r\nfunction copyFnProps(oldFn: { [x: string]: Function }, newFn: { (...args: NonSafe[]): Function; [x: string]: NonSafe }) {\r\n    Object.keys(oldFn).forEach((key) => {\r\n        newFn[key] = oldFn[key]\r\n    })\r\n\r\n    return newFn\r\n}\r\n\r\n/**\r\n * It takes a function and returns a new function that calls the original function and then calls the\r\n * next function in the chain if the original function returns a promise\r\n * @param fn - { [x: string]: Function } & Function\r\n * @returns A function that takes in a function and returns a new function.\r\n */\r\nfunction wrap(fn: { [x: string]: Function } & Function) {\r\n    const newFn = function newFn(this: NonSafe, ...args: NonSafe[]) {\r\n        const result = fn.apply(this, args)\r\n        const next = (args.length === 5 ? args[2] : last(args)) || noop\r\n\r\n        if (result && result.catch) result.catch((err: Error) => next(err))\r\n\r\n        return result\r\n    }\r\n\r\n    Object.defineProperty(newFn, 'length', {\r\n        value: fn.length,\r\n        writable: false\r\n    })\r\n\r\n    return copyFnProps(fn, newFn)\r\n}\r\n\r\n/**\r\n * It wraps the function passed to `Router.param` with a function that calls the original function, but\r\n * also calls `next()` if the original function throws an error\r\n * @returns The original param function is being returned.\r\n */\r\nexport function patchRouterParam() {\r\n    const originalParam = Router.prototype.constructor.param\r\n    Router.prototype.constructor.param = function param(name: string, fn: { [x: string]: Function } & Function) {\r\n        fn = wrap(fn)\r\n        return originalParam.call(this, name, fn)\r\n    }\r\n}\r\n\r\n/* Creating a getter and setter for the `handle` property on the `Layer` class. */\r\nObject.defineProperty(Layer.prototype, 'handle', {\r\n    enumerable: true,\r\n\r\n    get() {\r\n        return this.__handle\r\n    },\r\n\r\n    set(fn) {\r\n        fn = wrap(fn)\r\n        this.__handle = fn\r\n    }\r\n})\r\n"]}