{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/utils/types.ts"],"names":[],"mappings":";;;AAcA;;GAEG;AACH,IAAY,YAQX;AARD,WAAY,YAAY;IACpB,uCAAuB,CAAA;IACvB,qDAAqC,CAAA;IACrC,2EAA2D,CAAA;IAC3D,mEAAmD,CAAA;IACnD,2EAA2D,CAAA;IAC3D,2CAA2B,CAAA;IAC3B,iEAAiD,CAAA;AACrD,CAAC,EARW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAQvB;AAED;;GAEG;AACH,IAAY,WAMX;AAND,WAAY,WAAW;IACnB,0BAAW,CAAA;IACX,4BAAa,CAAA;IACb,0BAAW,CAAA;IACX,8BAAe,CAAA;IACf,gCAAiB,CAAA;AACrB,CAAC,EANW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAMtB;AAED;;GAEG;AACH,IAAY,gBAUX;AAVD,WAAY,gBAAgB;IACxB,6DAAO,CAAA;IACP,+DAAQ,CAAA;IACR,2DAAM,CAAA;IACN,uDAAI,CAAA;IACJ,yDAAK,CAAA;IACL,6DAAO,CAAA;IACP,6DAAO,CAAA;IACP,uDAAI,CAAA;IACJ,6DAAO,CAAA;AACX,CAAC,EAVW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAU3B","sourcesContent":["import { RequestHandler, Router as ExRouter } from 'express'\r\nimport { AnyZodObject } from 'zod'\r\n\r\n/**\r\n * NonSafe type is `any` type.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type NonSafe = any // Any type.\r\n\r\n/**\r\n * Generic type for class definitions.\r\n */\r\nexport type Constructable<T = unknown> = new (...args: NonSafe[]) => T\r\n\r\n/**\r\n * Possible metadata key.\r\n */\r\nexport enum MetadataKeys {\r\n    __api__ = 'key:__api__',\r\n    __api_method__ = 'key:__api_method__',\r\n    __api_method_middleware__ = 'key:__api_method_middleware__',\r\n    __api_method_params__ = 'key:__api_method_params__',\r\n    __api_method_validation__ = 'key:__api_method_validation__',\r\n    __route__ = 'key:__route__',\r\n    __route_middleware__ = 'key:__route_middleware__'\r\n}\r\n\r\n/**\r\n * Possible http method.\r\n */\r\nexport enum HttpMethods {\r\n    Get = 'get',\r\n    Post = 'post',\r\n    Put = 'put',\r\n    Patch = 'patch',\r\n    Delete = 'delete'\r\n}\r\n\r\n/**\r\n * Possible parameter index.\r\n */\r\nexport enum ParameterIndices {\r\n    REQUEST,\r\n    RESPONSE,\r\n    PARAMS,\r\n    BODY,\r\n    QUERY,\r\n    HEADERS,\r\n    COOKIES,\r\n    NEXT,\r\n    CONTEXT\r\n}\r\n\r\n/**\r\n * Possible path params type.\r\n */\r\nexport type PathParams = string | RegExp | Array<string | RegExp>\r\n\r\n/**\r\n * Possible api type.\r\n */\r\nexport interface Api {\r\n    /**\r\n     * Url path. the parents url path.\r\n     */\r\n    readonly url: PathParams\r\n}\r\n\r\n/**\r\n * Possible api method type.\r\n */\r\nexport interface ApiMethod {\r\n    /**\r\n     * Http method.\r\n     */\r\n    readonly method: HttpMethods\r\n    /**\r\n     * Url path.\r\n     */\r\n    readonly url: PathParams\r\n    /**\r\n     * Status code.\r\n     */\r\n    readonly status: number\r\n    /**\r\n     * Method key or name.\r\n     */\r\n    readonly propertyKey: string | symbol\r\n    /**\r\n     * Method value.\r\n     */\r\n    readonly descriptor: PropertyDescriptor\r\n}\r\n\r\n/**\r\n * Possible middleware type.\r\n */\r\nexport type Middleware = RequestHandler\r\n\r\n/**\r\n * Possible api method params type.\r\n */\r\nexport interface ApiMethodParams {\r\n    /**\r\n     * Parameter index type.\r\n     */\r\n    readonly type: ParameterIndices\r\n    /**\r\n     * Parameter name.\r\n     */\r\n    readonly name?: string\r\n    /**\r\n     * Parameter index.\r\n     */\r\n    readonly index: number\r\n    /**\r\n     * Method key or name.\r\n     */\r\n    readonly propertyKey: string | symbol\r\n}\r\n\r\n/**\r\n * Possible route type.\r\n */\r\nexport interface Route<T = unknown> {\r\n    /**\r\n     * Api handler.\r\n     */\r\n    readonly Apis: Constructable<T>[]\r\n    /**\r\n     * Route options.\r\n     */\r\n    readonly routeOptions: { router: ExRouter }\r\n}\r\n\r\n/**\r\n * Possible validate request type.\r\n */\r\nexport type ValidateRequest = { body?: AnyZodObject; params?: AnyZodObject; query?: AnyZodObject }\r\n"]}